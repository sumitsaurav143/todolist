{"version":3,"sources":["components/Images/logo.png","components/Header.jsx","components/Sidebar.jsx","components/Tasks.jsx","components/Content.jsx","App.jsx","index.js"],"names":["Header","className","src","logo","alt","Sidebar","selectedTab","setSelectedTab","onClick","FORMAT","formatDate","date","format","locale","dateFnsFormat","AddTasks","onCancel","onAddTask","useState","task","settask","setdate","value","onChange","event","target","disabled","onDayChange","day","dayPickerProps","modifiers","before","Date","placeholder","TASK_HEADER","All","Today","Week","TaskItems","tasks","tasksToRender","filter","isAfter","isBefore","addDays","isToday","map","id","text","Tasks","showAddTask","setshowAddTask","settasks","pervState","newTaskAdd","length","Content","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08baa3b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.dfae1499.png\";","import React from 'react'\r\nimport logo from './Images/logo.png'\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <nav>\r\n            <img src={logo} className=\"logo\" alt=\"Todolist\"></img>\r\n            <h2>TodoList</h2>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Sidebar = ({selectedTab,setSelectedTab}) => {\r\n    \r\n    return (\r\n        <div className=\"Sidebar\">\r\n            <div className={selectedTab===\"All\" ? \"active\" :\"\"} onClick={()=>setSelectedTab(\"All\")}>\r\n                <i className=\"fas fa-check-circle\"></i> All Tasks\r\n            </div>\r\n            <div className={selectedTab===\"Today\" ? \"active\" :\"\"} onClick={()=>setSelectedTab(\"Today\")}>\r\n                <i className=\"fas fa-angle-double-right\"></i> Today\r\n            </div>\r\n            <div className={selectedTab===\"Week\" ? \"active\" :\"\"} onClick={()=>setSelectedTab(\"Week\")}>\r\n                <i className=\"fas fa-calendar-alt\"></i> Last 7 Days\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","\r\nimport React, { useState } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from \"date-fns/format\";\r\nimport isBefore from \"date-fns/isBefore\";\r\nimport isAfter from \"date-fns/isAfter\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport isToday from \"date-fns/isToday\";\r\n\r\nconst FORMAT = \"dd/MM/yyyy\";\r\nfunction formatDate(date, format, locale) {\r\n  return dateFnsFormat(date, format, { locale });\r\n}\r\n\r\nconst AddTasks = ({ onCancel, onAddTask }) => {\r\n  const [task, settask] = useState(\"\");\r\n  const [date, setdate] = useState(null);\r\n  return (\r\n    <div className=\"task-dialogue\">\r\n    <input className=\"tskinp\" value={task} onChange={(event) => settask(event.target.value)} />\r\n    <div className=\"task-btn-action-container\">\r\n      <div className=\"btn-task-action\">\r\n          <button\r\n            disabled={!task}\r\n            className=\"Add-btn\"\r\n            onClick={() => {\r\n              onAddTask(task, date);\r\n              onCancel();\r\n              settask(\"\");\r\n            }}\r\n          >\r\n            Add task\r\n          </button>\r\n          <button\r\n            className=\"cancel-btn\"\r\n            onClick={() => {\r\n              onCancel();\r\n              settask(\"\");\r\n            }}\r\n          >\r\n            cancel\r\n          </button>\r\n        </div>\r\n        <div className=\"btn-calender\">\r\n          <DayPickerInput\r\n            onDayChange={(day) => setdate(day)}\r\n            formatDate={formatDate}\r\n            format={FORMAT}\r\n            dayPickerProps={{\r\n              modifiers: {\r\n                disabled: [{ before: new Date() }],\r\n              },\r\n            }}\r\n            placeholder={dateFnsFormat(new Date(), FORMAT)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TASK_HEADER = {\r\n  All: \"All\",\r\n  Today: \"Today\",\r\n  Week: \"Week\",\r\n};\r\n\r\nconst TaskItems = ({ tasks, selectedTab }) => {\r\n  let tasksToRender = [...tasks];\r\n  if (selectedTab === \"Week\") {\r\n    tasksToRender = tasksToRender.filter(\r\n      (tasks) =>\r\n        isAfter(tasks.date, new Date()) &&\r\n        isBefore(tasks.date, addDays(new Date(), 7))\r\n    );\r\n  }\r\n  if (selectedTab === \"Today\") {\r\n    tasksToRender = tasksToRender.filter((tasks) => isToday(tasks.date));\r\n  }\r\n  return (\r\n    <div className=\"taskItems-container\">\r\n      {tasksToRender.map((tasks) => (\r\n        <div className=\"taskItems\">\r\n          <p id=\"tskdata\">{tasks.text} <p id=\"tskdate\">{dateFnsFormat(new Date(tasks.date), FORMAT)}</p></p>\r\n         \r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tasks = ({ selectedTab }) => {\r\n  const [showAddTask, setshowAddTask] = useState(false);\r\n  const [tasks, settasks] = useState([]);\r\n\r\n  const addNewTask = (text, date) => {\r\n    const newTaskAdd = { text, date: date || new Date() };\r\n    settasks((pervState) => [...pervState, newTaskAdd]);\r\n  };\r\n  return (\r\n    <div className=\"tasks\">\r\n      <h1>{TASK_HEADER[selectedTab]}</h1>\r\n      {selectedTab === \"All\" ? (\r\n        <div\r\n          className=\"add-task-btn\"\r\n          onClick={() => setshowAddTask((pervState) => !pervState)}\r\n        >\r\n          <span className=\"plus\">+</span>\r\n          <span className=\"add-task-text\">Add task</span>\r\n        </div>\r\n      ) : null}\r\n      {showAddTask && (\r\n        <AddTasks\r\n          onAddTask={addNewTask}\r\n          onCancel={() => setshowAddTask(false)}\r\n        />\r\n      )}\r\n      {tasks.length > 0 ? (\r\n        <TaskItems tasks={tasks} selectedTab={selectedTab} />\r\n      ) : (\r\n        <p>No Task added</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;","import React,{useState} from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Tasks from './Tasks'\r\n\r\nconst Content = () => {\r\n\r\n    const [selectedTab,setSelectedTab]=useState(\"All\")\r\n    return (\r\n        <div className=\"Content\">\r\n            <Sidebar selectedTab={selectedTab} setSelectedTab={setSelectedTab}/>\r\n            <Tasks selectedTab={selectedTab}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport Header from './components/Header'\r\nimport Content from './components/Content'\r\nimport './style.scss'\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n        <Header />\r\n        <Content/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,document.getElementById(\"root\"))\r\n"],"sourceRoot":""}